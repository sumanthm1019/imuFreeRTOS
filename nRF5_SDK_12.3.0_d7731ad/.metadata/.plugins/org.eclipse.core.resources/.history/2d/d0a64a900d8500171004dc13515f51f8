/*
 * i2c.c
 *
 *  Created on: Aug 19, 2017
 *      Author: Sumanth
 */

#include "i2c.h"

/*
 * @brief Static Variables
 */


/**
 * @brief i2c event handler
 */
/**
 * @brief TWI events handler.
 */
void twi_handler(nrf_drv_twi_evt_t const * p_event, void * p_context)
{
    switch (p_event->type)
    {
        case NRF_DRV_TWI_EVT_DONE:
            if (p_event->xfer_desc.type == NRF_DRV_TWI_XFER_RX)
            {
                NRF_LOG_INFO("Data has been received\r\n");
            }
            break;
        default:
            break;
    }
}
/**
 * @brief Function initializes i2c drivers
 */
uint16_t i2c_init(i2c_cfg_t *i2c)
{
	uint16_t err_num = 0;
	const nrf_drv_twi_config_t nrf_twi_config = {
			.scl 				= i2c->scl,
			.sda 				= i2c->sda,
			.frequency			= NRF_TWI_FREQ_100K,
			.interrupt_priority = APP_IRQ_PRIORITY_HIGH,
			.clear_bus_init 	= false };

	err_num = nrf_drv_twi_init(&(i2c->instance), &nrf_twi_config, twi_handler, NULL);
	if(err_num) { NRF_LOG_ERROR("[i2c_init] Failed to initialize i2c [Error Num 0x%02x]\r\n", err_num); }

	nrf_drv_twi_enable(&(i2c->instance));
	return err_num;
}

/**
 * @brief Function to write data on i2c bus
 */
uint16_t i2c_write(i2c_cfg_t *i2c, uint8_t *data, uint8_t reg)
{
	uint16_t err_num = 0;

	err_num = nrf_drv_twi_tx(&(i2c->instance), reg, data, sizeof(data), false);
	if(err_num) { NRF_LOG_INFO("[i2c_write] Failed to write data on i2c bus! [Error Num: 0x%02X]\r\n", err_num); }

	// Wait for Tx Complete Semaphore
	return err_num;
}

/**
 * @brief Function to read data on i2c bus
 */
uint16_t i2c_read(i2c_cfg_t *i2c, uint8_t *data, uint8_t reg)
{
	uint16_t err_num = 0;

	err_num = nrf_drv_twi_rx(&(i2c->instance), reg, data, sizeof(data), false);
	if(err_num) { NRF_LOG_INFO("[i2c_i2c_readwrite] Failed to write data on i2c bus! [Error Num: 0x%02X]\r\n", err_num); }

	// Wait for Tx Complete Semaphore
	return err_num;
}


